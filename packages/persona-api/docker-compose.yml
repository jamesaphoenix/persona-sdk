version: '3.8'

services:
  # Development API with hot reload
  api-dev:
    build:
      context: ../..
      dockerfile: packages/persona-api/Dockerfile.dev
    container_name: persona-api-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - HOST=0.0.0.0
      - LOG_LEVEL=debug
      - MOCK_OPENAI=true
    volumes:
      # Mount source code for hot reload
      - ../../packages/persona-sdk/src:/app/packages/persona-sdk/src
      - ../../packages/persona-api/src:/app/packages/persona-api/src
      # Prevent node_modules from being overwritten
      - /app/node_modules
      - /app/packages/persona-sdk/node_modules
      - /app/packages/persona-api/node_modules
    command: pnpm --filter @jamesaphoenix/persona-api dev

  # Production API
  api:
    build:
      context: ../..
      dockerfile: packages/persona-api/Dockerfile
    container_name: persona-api
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOST=0.0.0.0
      - LOG_LEVEL=info
      - MOCK_OPENAI=${MOCK_OPENAI:-false}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL for future persistence
  postgres:
    image: postgres:16-alpine
    container_name: persona-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=persona
      - POSTGRES_PASSWORD=persona_secret
      - POSTGRES_DB=persona_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U persona"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for future caching/queues
  redis:
    image: redis:7-alpine
    container_name: persona-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Swagger UI standalone (optional)
  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: persona-swagger
    ports:
      - "8080:8080"
    environment:
      - SWAGGER_JSON_URL=http://localhost:3000/docs/json
    depends_on:
      - api-dev

volumes:
  postgres_data:
  redis_data: