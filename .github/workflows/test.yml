name: Test

on:
  push:
    branches: ['**']  # Run on all branches
  pull_request:
    branches: ['**']

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20.x, 22.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.10.0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --reporter=silent
        
      - name: Type check
        run: pnpm type-check
        
      - name: Run tests
        run: pnpm test
        
      - name: Run tests with coverage
        run: pnpm test:coverage
        
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
        with:
          files: ./packages/persona-sdk/coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.10.0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --reporter=silent
        
      - name: Build package
        run: cd packages/persona-sdk && pnpm build