name: Deploy Docs to Vercel

on:
  push:
    branches: [main]
    paths:
      - 'docs/**'
      - 'packages/persona-sdk/**'
      - '.github/workflows/deploy-vercel.yml'
  workflow_dispatch:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_TEAM_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.10.0
          
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build SDK first (docs dependency)
        run: pnpm --filter @jamesaphoenix/persona-sdk build
        
      - name: Pull Vercel Environment Information
        run: |
          vercel link --yes --token=${{ secrets.VERCEL_TOKEN }} --scope=${{ secrets.VERCEL_TEAM_ID }}
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }} --scope=${{ secrets.VERCEL_TEAM_ID }}
        working-directory: ./docs
        
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }} --scope=${{ secrets.VERCEL_TEAM_ID }}
        working-directory: ./docs
        
      - name: Deploy to Vercel
        id: deploy
        run: |
          url=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} --scope=${{ secrets.VERCEL_TEAM_ID }})
          echo "deployment_url=$url" >> $GITHUB_OUTPUT
        working-directory: ./docs
        
      - name: Comment deployment URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ Documentation deployed to: ${{ steps.deploy.outputs.deployment_url }}'
            })